		DynamoDB- Other Key Facts

	Conditional Writes are Indempotent

	If item = $10 then update to $12

	Note that conditional writes are idempotent. This means that you can send the same conditional write request multiple times, but it will have no further effect on the item after the first time DynamoDB performs the specified update

	For example, suppose you issue a request to update the price of a book item by 10% with the expectation that the price is currently $20
	However, before you get a response, a network error occurs and you don't know whether your request was successful or not.
	Because a conditional update is an idempotent operation, you can send the same request again and DynamoDB will update the price only if the current price is still $20

	Atomic Counters

	DynamoDB supports atomic counters, where you use the UpdateItem operation to increment or decrement the value of an existing attribute without interfering with other write requests. (All write requests are applied in the order in which they were received)

	For example, a web application might want to maintain a counter per visitor to their site. In this case, the application would need to increment this counter regardless of its current value. 

	Atomic counter updates are not idemptotent. 

	This means that the counter will increment each time you call UpdateItem

	If you suspect that a previous request was unsuccessful, your application could retry the UpdateItem operation

	However, this would risk updating the counter twice. 

	This might be acceptable for a web site counter, because you can tolerate with slightly over-or under-counting the visitors

	However, in a banking application, it would be safer to use a conditional update rather than an atomic counter.

	Batch Operation

	If your application needs to read multiple items, you can use the BatchGetItem API

	A single BatchGetItem request can retrieve up to 1MB of data, which can contain as many as 100 items. 

	In addition, a signle BatchGetItem request can retrieve items from multiple tables

	